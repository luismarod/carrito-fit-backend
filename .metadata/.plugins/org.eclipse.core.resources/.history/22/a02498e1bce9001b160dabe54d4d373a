package com.example.demo.security;

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.User.UserBuilder;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.example.demo.models.entity.Usuario;
import com.example.demo.models.repository.UsuarioRepository;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


@Service
public class UserDetailsServices implements UserDetailsService{
	
	private Logger logger = LoggerFactory.getLogger(UserDetailsServices.class);
	@Autowired
	private UsuarioRepository usuarioRepository;
	
	@Override
	public org.springframework.security.core.userdetails.UserDetails loadUserByUsername(String username){
		Usuario usuario = usuarioRepository.findUsuarioByUsername(username);
		
		
		if(usuario == null) {
			logger.error("Error en el login: no existe el usuario");
		}
		
		List<GrantedAuthority> authorities = usuario.getRoles()
				.stream()
				.map(role-> new SimpleGrantedAuthority(role.getNombre()))
				.collect(Collectors.toList());
		
		return new User(usuario.getUsername(), usuario.getPassword(), true, true, true, true, authorities);
	}

}
